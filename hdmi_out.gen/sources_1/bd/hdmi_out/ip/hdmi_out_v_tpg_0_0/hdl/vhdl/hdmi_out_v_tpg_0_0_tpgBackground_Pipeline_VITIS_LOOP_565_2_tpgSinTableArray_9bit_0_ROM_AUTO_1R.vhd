-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity hdmi_out_v_tpg_0_0_tpgBackground_Pipeline_VITIS_LOOP_565_2_tpgSinTableArray_9bit_0_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 8; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 410
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);
 
          address1        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce1             : in std_logic; 
          q1              : out std_logic_vector(DataWidth-1 downto 0);
 
          address2        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce2             : in std_logic; 
          q2              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of hdmi_out_v_tpg_0_0_tpgBackground_Pipeline_VITIS_LOOP_565_2_tpgSinTableArray_9bit_0_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address1_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address2_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "00000000", 1 => "00000001", 2 => "00000011", 3 => "00000101", 
    4 => "00000111", 5 => "00001001", 6 => "00001011", 7 => "00001101", 
    8 => "00001111", 9 => "00010001", 10 => "00010011", 11 => "00010101", 
    12 => "00010111", 13 => "00011001", 14 => "00011011", 15 => "00011101", 
    16 => "00011111", 17 => "00100001", 18 => "00100010", 19 => "00100100", 
    20 => "00100110", 21 => "00101000", 22 => "00101010", 23 => "00101100", 
    24 => "00101110", 25 => "00101111", 26 => "00110001", 27 => "00110011", 
    28 => "00110101", 29 => "00110111", 30 => "00111000", 31 => "00111010", 
    32 => "00111100", 33 => "00111110", 34 => "00111111", 35 => "01000001", 
    36 => "01000011", 37 => "01000100", 38 => "01000110", 39 => "01001000", 
    40 => "01001001", 41 => "01001011", 42 => "01001100", 43 => "01001110", 
    44 => "01001111", 45 => "01010001", 46 => "01010011", 47 => "01010100", 
    48 => "01010101", 49 => "01010111", 50 => "01011000", 51 => "01011010", 
    52 => "01011011", 53 => "01011100", 54 => "01011110", 55 => "01011111", 
    56 => "01100000", 57 => "01100010", 58 => "01100011", 59 => "01100100", 
    60 => "01100101", 61 => "01100111", 62 => "01101000", 63 => "01101001", 
    64 => "01101010", 65 => "01101011", 66 => "01101100", 67 => "01101101", 
    68 => "01101110", 69 => "01101111", 70 => "01110000", 71 => "01110001", 
    72 => "01110010", 73 => "01110011", 74 => "01110100", 75 => "01110100", 
    76 => "01110101", 77 => "01110110", 78 => "01110111", 79 => "01110111", 
    80 => "01111000", 81 => "01111001", 82 => "01111001", 83 => "01111010", 
    84 => "01111010", 85 => "01111011", 86 => "01111011", 87 => "01111100", 
    88 => "01111100", 89 => "01111101", 90 => "01111101", 91 => "01111110", 
    92 => "01111110", 93 => "01111110", 94 => "01111110", 95 => "01111111", 
    96 => "01111111", 97 => "01111111", 98 => "01111111", 99 => "01111111", 
    100 => "01111111", 101 => "01111111", 102 => "01111111", 103 => "01111111", 
    104 => "01111111", 105 => "01111111", 106 => "01111111", 107 => "01111111", 
    108 => "01111111", 109 => "01111111", 110 => "01111111", 111 => "01111110", 
    112 => "01111110", 113 => "01111110", 114 => "01111101", 115 => "01111101", 
    116 => "01111101", 117 => "01111100", 118 => "01111100", 119 => "01111011", 
    120 => "01111011", 121 => "01111010", 122 => "01111010", 123 => "01111001", 
    124 => "01111001", 125 => "01111000", 126 => "01110111", 127 => "01110110", 
    128 => "01110110", 129 => "01110101", 130 => "01110100", 131 => "01110011", 
    132 => "01110011", 133 => "01110010", 134 => "01110001", 135 => "01110000", 
    136 => "01101111", 137 => "01101110", 138 => "01101101", 139 => "01101100", 
    140 => "01101011", 141 => "01101010", 142 => "01101001", 143 => "01100111", 
    144 => "01100110", 145 => "01100101", 146 => "01100100", 147 => "01100011", 
    148 => "01100001", 149 => "01100000", 150 => "01011111", 151 => "01011110", 
    152 => "01011100", 153 => "01011011", 154 => "01011001", 155 => "01011000", 
    156 => "01010111", 157 => "01010101", 158 => "01010100", 159 => "01010010", 
    160 => "01010001", 161 => "01001111", 162 => "01001110", 163 => "01001100", 
    164 => "01001010", 165 => "01001001", 166 => "01000111", 167 => "01000110", 
    168 => "01000100", 169 => "01000010", 170 => "01000001", 171 => "00111111", 
    172 => "00111101", 173 => "00111011", 174 => "00111010", 175 => "00111000", 
    176 => "00110110", 177 => "00110100", 178 => "00110011", 179 => "00110001", 
    180 => "00101111", 181 => "00101101", 182 => "00101011", 183 => "00101010", 
    184 => "00101000", 185 => "00100110", 186 => "00100100", 187 => "00100010", 
    188 => "00100000", 189 => "00011110", 190 => "00011100", 191 => "00011010", 
    192 => "00011000", 193 => "00010111", 194 => "00010101", 195 => "00010011", 
    196 => "00010001", 197 => "00001111", 198 => "00001101", 199 => "00001011", 
    200 => "00001001", 201 => "00000111", 202 => "00000101", 203 => "00000011", 
    204 => "00000001", 205 => "11111111", 206 => "11111101", 207 => "11111011", 
    208 => "11111001", 209 => "11110111", 210 => "11110101", 211 => "11110011", 
    212 => "11110001", 213 => "11101111", 214 => "11101101", 215 => "11101100", 
    216 => "11101010", 217 => "11101000", 218 => "11100110", 219 => "11100100", 
    220 => "11100010", 221 => "11100000", 222 => "11011110", 223 => "11011100", 
    224 => "11011010", 225 => "11011000", 226 => "11010111", 227 => "11010101", 
    228 => "11010011", 229 => "11010001", 230 => "11001111", 231 => "11001101", 
    232 => "11001100", 233 => "11001010", 234 => "11001000", 235 => "11000110", 
    236 => "11000101", 237 => "11000011", 238 => "11000001", 239 => "10111111", 
    240 => "10111110", 241 => "10111100", 242 => "10111010", 243 => "10111001", 
    244 => "10110111", 245 => "10110101", 246 => "10110100", 247 => "10110010", 
    248 => "10110001", 249 => "10101111", 250 => "10101110", 251 => "10101100", 
    252 => "10101011", 253 => "10101001", 254 => "10101000", 255 => "10100110", 
    256 => "10100101", 257 => "10100100", 258 => "10100010", 259 => "10100001", 
    260 => "10100000", 261 => "10011110", 262 => "10011101", 263 => "10011100", 
    264 => "10011011", 265 => "10011001", 266 => "10011000", 267 => "10010111", 
    268 => "10010110", 269 => "10010101", 270 => "10010100", 271 => "10010011", 
    272 => "10010010", 273 => "10010001", 274 => "10010000", 275 => "10001111", 
    276 => "10001110", 277 => "10001101", 278 => "10001100", 279 => "10001011", 
    280 => "10001010", 281 => "10001010", 282 => "10001001", 283 => "10001000", 
    284 => "10001000", 285 => "10000111", 286 => "10000110", 287 => "10000110", 
    288 => "10000101", 289 => "10000100", 290 => "10000100", 291 => "10000011", 
    292 => "10000011", 293 => "10000011", 294 => "10000010", 295 => "10000010", 
    296 => "10000001", 297 => "10000001", 298 => "10000001", 299 => "10000001", 
    300 => "10000000", 301 => "10000000", 302 => "10000000", 303 => "10000000", 
    304 => "10000000", 305 => "10000000", 306 => "10000000", 307 => "10000000", 
    308 => "10000000", 309 => "10000000", 310 => "10000000", 311 => "10000000", 
    312 => "10000000", 313 => "10000000", 314 => "10000000", 315 => "10000000", 
    316 => "10000001", 317 => "10000001", 318 => "10000001", 319 => "10000010", 
    320 => "10000010", 321 => "10000010", 322 => "10000011", 323 => "10000011", 
    324 => "10000100", 325 => "10000100", 326 => "10000101", 327 => "10000101", 
    328 => "10000110", 329 => "10000111", 330 => "10000111", 331 => "10001000", 
    332 => "10001001", 333 => "10001001", 334 => "10001010", 335 => "10001011", 
    336 => "10001100", 337 => "10001101", 338 => "10001110", 339 => "10001110", 
    340 => "10001111", 341 => "10010000", 342 => "10010001", 343 => "10010010", 
    344 => "10010011", 345 => "10010100", 346 => "10010110", 347 => "10010111", 
    348 => "10011000", 349 => "10011001", 350 => "10011010", 351 => "10011011", 
    352 => "10011101", 353 => "10011110", 354 => "10011111", 355 => "10100000", 
    356 => "10100010", 357 => "10100011", 358 => "10100100", 359 => "10100110", 
    360 => "10100111", 361 => "10101001", 362 => "10101010", 363 => "10101100", 
    364 => "10101101", 365 => "10101111", 366 => "10110000", 367 => "10110010", 
    368 => "10110011", 369 => "10110101", 370 => "10110110", 371 => "10111000", 
    372 => "10111010", 373 => "10111011", 374 => "10111101", 375 => "10111111", 
    376 => "11000000", 377 => "11000010", 378 => "11000100", 379 => "11000110", 
    380 => "11000111", 381 => "11001001", 382 => "11001011", 383 => "11001101", 
    384 => "11001111", 385 => "11010000", 386 => "11010010", 387 => "11010100", 
    388 => "11010110", 389 => "11011000", 390 => "11011010", 391 => "11011011", 
    392 => "11011101", 393 => "11011111", 394 => "11100001", 395 => "11100011", 
    396 => "11100101", 397 => "11100111", 398 => "11101001", 399 => "11101011", 
    400 => "11101101", 401 => "11101111", 402 => "11110001", 403 => "11110011", 
    404 => "11110101", 405 => "11110110", 406 => "11111000", 407 => "11111010", 
    408 => "11111100", 409 => "11111110");

signal mem1 : mem_array := (
    0 => "00000000", 1 => "00000001", 2 => "00000011", 3 => "00000101", 
    4 => "00000111", 5 => "00001001", 6 => "00001011", 7 => "00001101", 
    8 => "00001111", 9 => "00010001", 10 => "00010011", 11 => "00010101", 
    12 => "00010111", 13 => "00011001", 14 => "00011011", 15 => "00011101", 
    16 => "00011111", 17 => "00100001", 18 => "00100010", 19 => "00100100", 
    20 => "00100110", 21 => "00101000", 22 => "00101010", 23 => "00101100", 
    24 => "00101110", 25 => "00101111", 26 => "00110001", 27 => "00110011", 
    28 => "00110101", 29 => "00110111", 30 => "00111000", 31 => "00111010", 
    32 => "00111100", 33 => "00111110", 34 => "00111111", 35 => "01000001", 
    36 => "01000011", 37 => "01000100", 38 => "01000110", 39 => "01001000", 
    40 => "01001001", 41 => "01001011", 42 => "01001100", 43 => "01001110", 
    44 => "01001111", 45 => "01010001", 46 => "01010011", 47 => "01010100", 
    48 => "01010101", 49 => "01010111", 50 => "01011000", 51 => "01011010", 
    52 => "01011011", 53 => "01011100", 54 => "01011110", 55 => "01011111", 
    56 => "01100000", 57 => "01100010", 58 => "01100011", 59 => "01100100", 
    60 => "01100101", 61 => "01100111", 62 => "01101000", 63 => "01101001", 
    64 => "01101010", 65 => "01101011", 66 => "01101100", 67 => "01101101", 
    68 => "01101110", 69 => "01101111", 70 => "01110000", 71 => "01110001", 
    72 => "01110010", 73 => "01110011", 74 => "01110100", 75 => "01110100", 
    76 => "01110101", 77 => "01110110", 78 => "01110111", 79 => "01110111", 
    80 => "01111000", 81 => "01111001", 82 => "01111001", 83 => "01111010", 
    84 => "01111010", 85 => "01111011", 86 => "01111011", 87 => "01111100", 
    88 => "01111100", 89 => "01111101", 90 => "01111101", 91 => "01111110", 
    92 => "01111110", 93 => "01111110", 94 => "01111110", 95 => "01111111", 
    96 => "01111111", 97 => "01111111", 98 => "01111111", 99 => "01111111", 
    100 => "01111111", 101 => "01111111", 102 => "01111111", 103 => "01111111", 
    104 => "01111111", 105 => "01111111", 106 => "01111111", 107 => "01111111", 
    108 => "01111111", 109 => "01111111", 110 => "01111111", 111 => "01111110", 
    112 => "01111110", 113 => "01111110", 114 => "01111101", 115 => "01111101", 
    116 => "01111101", 117 => "01111100", 118 => "01111100", 119 => "01111011", 
    120 => "01111011", 121 => "01111010", 122 => "01111010", 123 => "01111001", 
    124 => "01111001", 125 => "01111000", 126 => "01110111", 127 => "01110110", 
    128 => "01110110", 129 => "01110101", 130 => "01110100", 131 => "01110011", 
    132 => "01110011", 133 => "01110010", 134 => "01110001", 135 => "01110000", 
    136 => "01101111", 137 => "01101110", 138 => "01101101", 139 => "01101100", 
    140 => "01101011", 141 => "01101010", 142 => "01101001", 143 => "01100111", 
    144 => "01100110", 145 => "01100101", 146 => "01100100", 147 => "01100011", 
    148 => "01100001", 149 => "01100000", 150 => "01011111", 151 => "01011110", 
    152 => "01011100", 153 => "01011011", 154 => "01011001", 155 => "01011000", 
    156 => "01010111", 157 => "01010101", 158 => "01010100", 159 => "01010010", 
    160 => "01010001", 161 => "01001111", 162 => "01001110", 163 => "01001100", 
    164 => "01001010", 165 => "01001001", 166 => "01000111", 167 => "01000110", 
    168 => "01000100", 169 => "01000010", 170 => "01000001", 171 => "00111111", 
    172 => "00111101", 173 => "00111011", 174 => "00111010", 175 => "00111000", 
    176 => "00110110", 177 => "00110100", 178 => "00110011", 179 => "00110001", 
    180 => "00101111", 181 => "00101101", 182 => "00101011", 183 => "00101010", 
    184 => "00101000", 185 => "00100110", 186 => "00100100", 187 => "00100010", 
    188 => "00100000", 189 => "00011110", 190 => "00011100", 191 => "00011010", 
    192 => "00011000", 193 => "00010111", 194 => "00010101", 195 => "00010011", 
    196 => "00010001", 197 => "00001111", 198 => "00001101", 199 => "00001011", 
    200 => "00001001", 201 => "00000111", 202 => "00000101", 203 => "00000011", 
    204 => "00000001", 205 => "11111111", 206 => "11111101", 207 => "11111011", 
    208 => "11111001", 209 => "11110111", 210 => "11110101", 211 => "11110011", 
    212 => "11110001", 213 => "11101111", 214 => "11101101", 215 => "11101100", 
    216 => "11101010", 217 => "11101000", 218 => "11100110", 219 => "11100100", 
    220 => "11100010", 221 => "11100000", 222 => "11011110", 223 => "11011100", 
    224 => "11011010", 225 => "11011000", 226 => "11010111", 227 => "11010101", 
    228 => "11010011", 229 => "11010001", 230 => "11001111", 231 => "11001101", 
    232 => "11001100", 233 => "11001010", 234 => "11001000", 235 => "11000110", 
    236 => "11000101", 237 => "11000011", 238 => "11000001", 239 => "10111111", 
    240 => "10111110", 241 => "10111100", 242 => "10111010", 243 => "10111001", 
    244 => "10110111", 245 => "10110101", 246 => "10110100", 247 => "10110010", 
    248 => "10110001", 249 => "10101111", 250 => "10101110", 251 => "10101100", 
    252 => "10101011", 253 => "10101001", 254 => "10101000", 255 => "10100110", 
    256 => "10100101", 257 => "10100100", 258 => "10100010", 259 => "10100001", 
    260 => "10100000", 261 => "10011110", 262 => "10011101", 263 => "10011100", 
    264 => "10011011", 265 => "10011001", 266 => "10011000", 267 => "10010111", 
    268 => "10010110", 269 => "10010101", 270 => "10010100", 271 => "10010011", 
    272 => "10010010", 273 => "10010001", 274 => "10010000", 275 => "10001111", 
    276 => "10001110", 277 => "10001101", 278 => "10001100", 279 => "10001011", 
    280 => "10001010", 281 => "10001010", 282 => "10001001", 283 => "10001000", 
    284 => "10001000", 285 => "10000111", 286 => "10000110", 287 => "10000110", 
    288 => "10000101", 289 => "10000100", 290 => "10000100", 291 => "10000011", 
    292 => "10000011", 293 => "10000011", 294 => "10000010", 295 => "10000010", 
    296 => "10000001", 297 => "10000001", 298 => "10000001", 299 => "10000001", 
    300 => "10000000", 301 => "10000000", 302 => "10000000", 303 => "10000000", 
    304 => "10000000", 305 => "10000000", 306 => "10000000", 307 => "10000000", 
    308 => "10000000", 309 => "10000000", 310 => "10000000", 311 => "10000000", 
    312 => "10000000", 313 => "10000000", 314 => "10000000", 315 => "10000000", 
    316 => "10000001", 317 => "10000001", 318 => "10000001", 319 => "10000010", 
    320 => "10000010", 321 => "10000010", 322 => "10000011", 323 => "10000011", 
    324 => "10000100", 325 => "10000100", 326 => "10000101", 327 => "10000101", 
    328 => "10000110", 329 => "10000111", 330 => "10000111", 331 => "10001000", 
    332 => "10001001", 333 => "10001001", 334 => "10001010", 335 => "10001011", 
    336 => "10001100", 337 => "10001101", 338 => "10001110", 339 => "10001110", 
    340 => "10001111", 341 => "10010000", 342 => "10010001", 343 => "10010010", 
    344 => "10010011", 345 => "10010100", 346 => "10010110", 347 => "10010111", 
    348 => "10011000", 349 => "10011001", 350 => "10011010", 351 => "10011011", 
    352 => "10011101", 353 => "10011110", 354 => "10011111", 355 => "10100000", 
    356 => "10100010", 357 => "10100011", 358 => "10100100", 359 => "10100110", 
    360 => "10100111", 361 => "10101001", 362 => "10101010", 363 => "10101100", 
    364 => "10101101", 365 => "10101111", 366 => "10110000", 367 => "10110010", 
    368 => "10110011", 369 => "10110101", 370 => "10110110", 371 => "10111000", 
    372 => "10111010", 373 => "10111011", 374 => "10111101", 375 => "10111111", 
    376 => "11000000", 377 => "11000010", 378 => "11000100", 379 => "11000110", 
    380 => "11000111", 381 => "11001001", 382 => "11001011", 383 => "11001101", 
    384 => "11001111", 385 => "11010000", 386 => "11010010", 387 => "11010100", 
    388 => "11010110", 389 => "11011000", 390 => "11011010", 391 => "11011011", 
    392 => "11011101", 393 => "11011111", 394 => "11100001", 395 => "11100011", 
    396 => "11100101", 397 => "11100111", 398 => "11101001", 399 => "11101011", 
    400 => "11101101", 401 => "11101111", 402 => "11110001", 403 => "11110011", 
    404 => "11110101", 405 => "11110110", 406 => "11111000", 407 => "11111010", 
    408 => "11111100", 409 => "11111110");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_1: process (address1) 
begin
      address1_tmp <= address1;
--synthesis translate_off
      if (CONV_INTEGER(address1) > AddressRange-1) then
           address1_tmp <= (others => '0');
      else 
           address1_tmp <= address1;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_2: process (address2) 
begin
      address2_tmp <= address2;
--synthesis translate_off
      if (CONV_INTEGER(address2) > AddressRange-1) then
           address2_tmp <= (others => '0');
      else 
           address2_tmp <= address2;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;
 
        if (ce1 = '1') then  
            q1 <= mem0(CONV_INTEGER(address1_tmp)); 
        end if;
 
        if (ce2 = '1') then  
            q2 <= mem1(CONV_INTEGER(address2_tmp)); 
        end if;

end if;
end process;

end rtl;

