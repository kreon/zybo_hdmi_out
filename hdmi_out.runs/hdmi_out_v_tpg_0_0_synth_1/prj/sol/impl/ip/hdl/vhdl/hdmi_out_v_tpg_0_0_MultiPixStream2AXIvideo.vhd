-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hdmi_out_v_tpg_0_0_MultiPixStream2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ovrlayYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    ovrlayYUV_empty_n : IN STD_LOGIC;
    ovrlayYUV_read : OUT STD_LOGIC;
    m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    m_axis_video_TVALID : OUT STD_LOGIC;
    m_axis_video_TREADY : IN STD_LOGIC;
    m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    height_val4_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    height_val4_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val4_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val4_empty_n : IN STD_LOGIC;
    height_val4_read : OUT STD_LOGIC;
    width_val7_dout : IN STD_LOGIC_VECTOR (12 downto 0);
    width_val7_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val7_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val7_empty_n : IN STD_LOGIC;
    width_val7_read : OUT STD_LOGIC;
    colorFormat_val17_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    colorFormat_val17_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val17_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val17_empty_n : IN STD_LOGIC;
    colorFormat_val17_read : OUT STD_LOGIC;
    fid_in_val9_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    fid_in_val9_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    fid_in_val9_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    fid_in_val9_empty_n : IN STD_LOGIC;
    fid_in_val9_read : OUT STD_LOGIC;
    fid : OUT STD_LOGIC_VECTOR (0 downto 0);
    fid_ap_vld : OUT STD_LOGIC;
    field_id_val8_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    field_id_val8_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    field_id_val8_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    field_id_val8_empty_n : IN STD_LOGIC;
    field_id_val8_read : OUT STD_LOGIC );
end;


architecture behav of hdmi_out_v_tpg_0_0_MultiPixStream2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fidStored : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal counter : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal height_val4_blk_n : STD_LOGIC;
    signal width_val7_blk_n : STD_LOGIC;
    signal colorFormat_val17_blk_n : STD_LOGIC;
    signal fid_in_val9_blk_n : STD_LOGIC;
    signal field_id_val8_blk_n : STD_LOGIC;
    signal colorFormat_val17_read_reg_289 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal fid_in_val9_read_reg_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal field_id_val8_read_reg_299 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_reg_304 : STD_LOGIC_VECTOR (12 downto 0);
    signal rows_reg_309 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_i_fu_211_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_i_reg_317 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln979_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln979_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln979_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln979_reg_330 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_done : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_idle : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_ready : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid_ap_vld : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ovrlayYUV_read : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TVALID : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TREADY : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_loc_1_i_out_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_loc_1_i_out_o_ap_vld : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_p_phi_i_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_p_phi_i_out_ap_vld : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_ap_vld : STD_LOGIC;
    signal empty_reg_149 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sof_reg_159 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln979_1_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal counter_loc_0_i_fu_104 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_phi_i_loc_fu_108 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_100 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal i_2_fu_245_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal fid_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hdmi_out_v_tpg_0_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sof : IN STD_LOGIC_VECTOR (0 downto 0);
        empty : IN STD_LOGIC_VECTOR (0 downto 0);
        cols : IN STD_LOGIC_VECTOR (12 downto 0);
        fid_in_val9_load : IN STD_LOGIC_VECTOR (0 downto 0);
        fid : OUT STD_LOGIC_VECTOR (0 downto 0);
        fid_ap_vld : OUT STD_LOGIC;
        ovrlayYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_empty_n : IN STD_LOGIC;
        ovrlayYUV_read : OUT STD_LOGIC;
        colorFormat_val17_load : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        m_axis_video_TVALID : OUT STD_LOGIC;
        m_axis_video_TREADY : IN STD_LOGIC;
        m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        field_id_val8_load : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln979 : IN STD_LOGIC_VECTOR (12 downto 0);
        counter_loc_1_i_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
        counter_loc_1_i_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        counter_loc_1_i_out_o_ap_vld : OUT STD_LOGIC;
        p_phi_i_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_phi_i_out_ap_vld : OUT STD_LOGIC;
        counter : OUT STD_LOGIC_VECTOR (15 downto 0);
        counter_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171 : component hdmi_out_v_tpg_0_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start,
        ap_done => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_done,
        ap_idle => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_idle,
        ap_ready => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_ready,
        sof => sof_reg_159,
        empty => empty_reg_149,
        cols => cols_reg_304,
        fid_in_val9_load => fid_in_val9_read_reg_294,
        fid => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid,
        fid_ap_vld => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid_ap_vld,
        ovrlayYUV_dout => ovrlayYUV_dout,
        ovrlayYUV_num_data_valid => ap_const_lv5_0,
        ovrlayYUV_fifo_cap => ap_const_lv5_0,
        ovrlayYUV_empty_n => ovrlayYUV_empty_n,
        ovrlayYUV_read => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ovrlayYUV_read,
        colorFormat_val17_load => colorFormat_val17_read_reg_289,
        m_axis_video_TDATA => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TDATA,
        m_axis_video_TVALID => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TVALID,
        m_axis_video_TREADY => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TREADY,
        m_axis_video_TKEEP => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TKEEP,
        m_axis_video_TSTRB => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TSTRB,
        m_axis_video_TUSER => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TUSER,
        m_axis_video_TLAST => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TLAST,
        m_axis_video_TID => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TID,
        m_axis_video_TDEST => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TDEST,
        field_id_val8_load => field_id_val8_read_reg_299,
        sext_ln979 => sub_i_reg_317,
        counter_loc_1_i_out_i => counter_loc_0_i_fu_104,
        counter_loc_1_i_out_o => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_loc_1_i_out_o,
        counter_loc_1_i_out_o_ap_vld => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_loc_1_i_out_o_ap_vld,
        p_phi_i_out => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_p_phi_i_out,
        p_phi_i_out_ap_vld => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_p_phi_i_out_ap_vld,
        counter => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter,
        counter_ap_vld => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    fid_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                fid_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                    fid_preg <= fidStored;
                end if; 
            end if;
        end if;
    end process;


    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_0))) then 
                    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    counter_loc_0_i_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                counter_loc_0_i_fu_104 <= counter;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_loc_1_i_out_o_ap_vld = ap_const_logic_1))) then 
                counter_loc_0_i_fu_104 <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_loc_1_i_out_o;
            end if; 
        end if;
    end process;

    empty_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_reg_149 <= p_phi_i_loc_fu_108;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                empty_reg_149 <= fidStored;
            end if; 
        end if;
    end process;

    i_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                i_fu_100 <= ap_const_lv12_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_0))) then 
                i_fu_100 <= i_2_fu_245_p2;
            end if; 
        end if;
    end process;

    sof_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sof_reg_159 <= and_ln979_reg_330;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                sof_reg_159 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                and_ln979_reg_330 <= and_ln979_fu_251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                colorFormat_val17_read_reg_289 <= colorFormat_val17_dout;
                cols_reg_304 <= width_val7_dout;
                fid_in_val9_read_reg_294 <= fid_in_val9_dout;
                field_id_val8_read_reg_299 <= field_id_val8_dout;
                icmp_ln979_reg_322 <= icmp_ln979_fu_217_p2;
                rows_reg_309 <= height_val4_dout;
                sub_i_reg_317 <= sub_i_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter_ap_vld = ap_const_logic_1))) then
                counter <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_counter;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_1))) then
                fidStored <= empty_reg_149;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_p_phi_i_out_ap_vld = ap_const_logic_1))) then
                p_phi_i_loc_fu_108 <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_p_phi_i_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_done, icmp_ln979_1_fu_240_p2, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    and_ln979_fu_251_p2 <= (sof_reg_159 and icmp_ln979_reg_322);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_done)
    begin
        if ((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, height_val4_empty_n, width_val7_empty_n, colorFormat_val17_empty_n, fid_in_val9_empty_n, field_id_val8_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (field_id_val8_empty_n = ap_const_logic_0) or (fid_in_val9_empty_n = ap_const_logic_0) or (colorFormat_val17_empty_n = ap_const_logic_0) or (width_val7_empty_n = ap_const_logic_0) or (height_val4_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln979_1_fu_240_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln979_1_fu_240_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln979_1_fu_240_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    colorFormat_val17_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, colorFormat_val17_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            colorFormat_val17_blk_n <= colorFormat_val17_empty_n;
        else 
            colorFormat_val17_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    colorFormat_val17_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            colorFormat_val17_read <= ap_const_logic_1;
        else 
            colorFormat_val17_read <= ap_const_logic_0;
        end if; 
    end process;


    fid_assign_proc : process(ap_CS_fsm_state1, fidStored, ap_block_state1, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid_ap_vld, ap_CS_fsm_state3, fid_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            fid <= fidStored;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid_ap_vld = ap_const_logic_1))) then 
            fid <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid;
        else 
            fid <= fid_preg;
        end if; 
    end process;


    fid_ap_vld_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid_ap_vld, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            fid_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fid_ap_vld <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_fid_ap_vld;
        else 
            fid_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    fid_in_val9_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, fid_in_val9_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            fid_in_val9_blk_n <= fid_in_val9_empty_n;
        else 
            fid_in_val9_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fid_in_val9_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            fid_in_val9_read <= ap_const_logic_1;
        else 
            fid_in_val9_read <= ap_const_logic_0;
        end if; 
    end process;


    field_id_val8_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, field_id_val8_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            field_id_val8_blk_n <= field_id_val8_empty_n;
        else 
            field_id_val8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    field_id_val8_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            field_id_val8_read <= ap_const_logic_1;
        else 
            field_id_val8_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ap_start_reg;
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TREADY <= (m_axis_video_TREADY and ap_CS_fsm_state3);

    height_val4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_val4_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_val4_blk_n <= height_val4_empty_n;
        else 
            height_val4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    height_val4_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            height_val4_read <= ap_const_logic_1;
        else 
            height_val4_read <= ap_const_logic_0;
        end if; 
    end process;

    i_2_fu_245_p2 <= std_logic_vector(unsigned(i_fu_100) + unsigned(ap_const_lv12_1));
    icmp_ln979_1_fu_240_p2 <= "1" when (i_fu_100 = rows_reg_309) else "0";
    icmp_ln979_fu_217_p2 <= "1" when (width_val7_dout = ap_const_lv13_0) else "0";
    m_axis_video_TDATA <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TDATA;
    m_axis_video_TDEST <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TDEST;
    m_axis_video_TID <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TID;
    m_axis_video_TKEEP <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TKEEP;
    m_axis_video_TLAST <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TLAST;
    m_axis_video_TSTRB <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TSTRB;
    m_axis_video_TUSER <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TUSER;
    m_axis_video_TVALID <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_m_axis_video_TVALID;

    ovrlayYUV_read_assign_proc : process(grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ovrlayYUV_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ovrlayYUV_read <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_981_2_fu_171_ovrlayYUV_read;
        else 
            ovrlayYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    sub_i_fu_211_p2 <= std_logic_vector(unsigned(width_val7_dout) + unsigned(ap_const_lv13_1FFF));

    width_val7_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_val7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_val7_blk_n <= width_val7_empty_n;
        else 
            width_val7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    width_val7_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            width_val7_read <= ap_const_logic_1;
        else 
            width_val7_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
