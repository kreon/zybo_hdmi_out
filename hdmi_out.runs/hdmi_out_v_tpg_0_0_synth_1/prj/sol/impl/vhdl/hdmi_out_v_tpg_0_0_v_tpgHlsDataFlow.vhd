-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hdmi_out_v_tpg_0_0_v_tpgHlsDataFlow is
port (
    height_val4 : IN STD_LOGIC_VECTOR (15 downto 0);
    width_val7 : IN STD_LOGIC_VECTOR (15 downto 0);
    field_id_val8 : IN STD_LOGIC_VECTOR (15 downto 0);
    fid_in_val9 : IN STD_LOGIC_VECTOR (0 downto 0);
    bckgndId_val10 : IN STD_LOGIC_VECTOR (7 downto 0);
    ovrlayId_val11 : IN STD_LOGIC_VECTOR (7 downto 0);
    maskId_val12 : IN STD_LOGIC_VECTOR (7 downto 0);
    motionSpeed_val14 : IN STD_LOGIC_VECTOR (7 downto 0);
    colorFormat_val17 : IN STD_LOGIC_VECTOR (7 downto 0);
    crossHairX_val18 : IN STD_LOGIC_VECTOR (15 downto 0);
    crossHairY_val19 : IN STD_LOGIC_VECTOR (15 downto 0);
    ZplateHorContStart_val20 : IN STD_LOGIC_VECTOR (15 downto 0);
    ZplateHorContDelta_val21 : IN STD_LOGIC_VECTOR (15 downto 0);
    ZplateVerContStart_val22 : IN STD_LOGIC_VECTOR (15 downto 0);
    ZplateVerContDelta_val23 : IN STD_LOGIC_VECTOR (15 downto 0);
    boxSize_val24 : IN STD_LOGIC_VECTOR (15 downto 0);
    boxColorR_val25 : IN STD_LOGIC_VECTOR (7 downto 0);
    boxColorG_val26 : IN STD_LOGIC_VECTOR (7 downto 0);
    boxColorB_val27 : IN STD_LOGIC_VECTOR (7 downto 0);
    dpDynamicRange_val28 : IN STD_LOGIC_VECTOR (7 downto 0);
    dpYUVCoef_val29 : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    fid : OUT STD_LOGIC_VECTOR (0 downto 0);
    s : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    field_id_val8_ap_vld : IN STD_LOGIC;
    fid_in_val9_ap_vld : IN STD_LOGIC;
    ovrlayId_val11_ap_vld : IN STD_LOGIC;
    maskId_val12_ap_vld : IN STD_LOGIC;
    crossHairX_val18_ap_vld : IN STD_LOGIC;
    crossHairY_val19_ap_vld : IN STD_LOGIC;
    boxSize_val24_ap_vld : IN STD_LOGIC;
    boxColorR_val25_ap_vld : IN STD_LOGIC;
    boxColorG_val26_ap_vld : IN STD_LOGIC;
    boxColorB_val27_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    height_val4_ap_vld : IN STD_LOGIC;
    width_val7_ap_vld : IN STD_LOGIC;
    bckgndId_val10_ap_vld : IN STD_LOGIC;
    ZplateHorContStart_val20_ap_vld : IN STD_LOGIC;
    ZplateHorContDelta_val21_ap_vld : IN STD_LOGIC;
    ZplateVerContStart_val22_ap_vld : IN STD_LOGIC;
    ZplateVerContDelta_val23_ap_vld : IN STD_LOGIC;
    dpDynamicRange_val28_ap_vld : IN STD_LOGIC;
    dpYUVCoef_val29_ap_vld : IN STD_LOGIC;
    motionSpeed_val14_ap_vld : IN STD_LOGIC;
    colorFormat_val17_ap_vld : IN STD_LOGIC;
    s_ap_vld : IN STD_LOGIC;
    m_axis_video_TVALID : OUT STD_LOGIC;
    m_axis_video_TREADY : IN STD_LOGIC;
    fid_ap_vld : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of hdmi_out_v_tpg_0_0_v_tpgHlsDataFlow is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_start_full_n : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_start_out : STD_LOGIC;
    signal entry_proc_U0_start_write : STD_LOGIC;
    signal entry_proc_U0_field_id_val8_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_field_id_val8_c_write : STD_LOGIC;
    signal entry_proc_U0_fid_in_val9_c_din : STD_LOGIC_VECTOR (0 downto 0);
    signal entry_proc_U0_fid_in_val9_c_write : STD_LOGIC;
    signal entry_proc_U0_ovrlayId_val11_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_ovrlayId_val11_c_write : STD_LOGIC;
    signal entry_proc_U0_maskId_val12_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_maskId_val12_c_write : STD_LOGIC;
    signal entry_proc_U0_crossHairX_val18_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_crossHairX_val18_c_write : STD_LOGIC;
    signal entry_proc_U0_crossHairY_val19_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_crossHairY_val19_c_write : STD_LOGIC;
    signal entry_proc_U0_boxSize_val24_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_boxSize_val24_c_write : STD_LOGIC;
    signal entry_proc_U0_boxColorR_val25_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_boxColorR_val25_c_write : STD_LOGIC;
    signal entry_proc_U0_boxColorG_val26_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_boxColorG_val26_c_write : STD_LOGIC;
    signal entry_proc_U0_boxColorB_val27_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_boxColorB_val27_c_write : STD_LOGIC;
    signal tpgBackground_U0_ap_start : STD_LOGIC;
    signal tpgBackground_U0_ap_done : STD_LOGIC;
    signal tpgBackground_U0_ap_continue : STD_LOGIC;
    signal tpgBackground_U0_ap_idle : STD_LOGIC;
    signal tpgBackground_U0_ap_ready : STD_LOGIC;
    signal tpgBackground_U0_bckgndYUV_din : STD_LOGIC_VECTOR (23 downto 0);
    signal tpgBackground_U0_bckgndYUV_write : STD_LOGIC;
    signal tpgBackground_U0_height_val4_c12_din : STD_LOGIC_VECTOR (15 downto 0);
    signal tpgBackground_U0_height_val4_c12_write : STD_LOGIC;
    signal tpgBackground_U0_width_val7_c13_din : STD_LOGIC_VECTOR (15 downto 0);
    signal tpgBackground_U0_width_val7_c13_write : STD_LOGIC;
    signal tpgBackground_U0_motionSpeed_val14_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgBackground_U0_motionSpeed_val14_c_write : STD_LOGIC;
    signal tpgBackground_U0_colorFormat_val17_c14_din : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgBackground_U0_colorFormat_val17_c14_write : STD_LOGIC;
    signal tpgForeground_U0_ap_start : STD_LOGIC;
    signal tpgForeground_U0_ap_done : STD_LOGIC;
    signal tpgForeground_U0_ap_continue : STD_LOGIC;
    signal tpgForeground_U0_ap_idle : STD_LOGIC;
    signal tpgForeground_U0_ap_ready : STD_LOGIC;
    signal tpgForeground_U0_bckgndYUV_read : STD_LOGIC;
    signal tpgForeground_U0_height_val_read : STD_LOGIC;
    signal tpgForeground_U0_width_val_read : STD_LOGIC;
    signal tpgForeground_U0_patternId_val_read : STD_LOGIC;
    signal tpgForeground_U0_maskId_val_read : STD_LOGIC;
    signal tpgForeground_U0_colorFormat_val_read : STD_LOGIC;
    signal tpgForeground_U0_crossHairX_val_read : STD_LOGIC;
    signal tpgForeground_U0_crossHairY_val_read : STD_LOGIC;
    signal tpgForeground_U0_boxSize_val_read : STD_LOGIC;
    signal tpgForeground_U0_boxColorR_val_read : STD_LOGIC;
    signal tpgForeground_U0_boxColorG_val_read : STD_LOGIC;
    signal tpgForeground_U0_boxColorB_val_read : STD_LOGIC;
    signal tpgForeground_U0_motionSpeed_val_read : STD_LOGIC;
    signal tpgForeground_U0_ovrlayYUV_din : STD_LOGIC_VECTOR (23 downto 0);
    signal tpgForeground_U0_ovrlayYUV_write : STD_LOGIC;
    signal tpgForeground_U0_height_val4_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal tpgForeground_U0_height_val4_c_write : STD_LOGIC;
    signal tpgForeground_U0_width_val7_c_din : STD_LOGIC_VECTOR (12 downto 0);
    signal tpgForeground_U0_width_val7_c_write : STD_LOGIC;
    signal tpgForeground_U0_colorFormat_val17_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgForeground_U0_colorFormat_val17_c_write : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_start : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_done : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ovrlayYUV_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TVALID : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_height_val4_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_width_val7_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_colorFormat_val17_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_fid_in_val9_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_fid : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_fid_ap_vld : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_field_id_val8_read : STD_LOGIC;
    signal field_id_val8_c_full_n : STD_LOGIC;
    signal field_id_val8_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal field_id_val8_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal field_id_val8_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal field_id_val8_c_empty_n : STD_LOGIC;
    signal fid_in_val9_c_full_n : STD_LOGIC;
    signal fid_in_val9_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal fid_in_val9_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal fid_in_val9_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal fid_in_val9_c_empty_n : STD_LOGIC;
    signal ovrlayId_val11_c_full_n : STD_LOGIC;
    signal ovrlayId_val11_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal ovrlayId_val11_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal ovrlayId_val11_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal ovrlayId_val11_c_empty_n : STD_LOGIC;
    signal maskId_val12_c_full_n : STD_LOGIC;
    signal maskId_val12_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal maskId_val12_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal maskId_val12_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal maskId_val12_c_empty_n : STD_LOGIC;
    signal crossHairX_val18_c_full_n : STD_LOGIC;
    signal crossHairX_val18_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal crossHairX_val18_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal crossHairX_val18_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal crossHairX_val18_c_empty_n : STD_LOGIC;
    signal crossHairY_val19_c_full_n : STD_LOGIC;
    signal crossHairY_val19_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal crossHairY_val19_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal crossHairY_val19_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal crossHairY_val19_c_empty_n : STD_LOGIC;
    signal boxSize_val24_c_full_n : STD_LOGIC;
    signal boxSize_val24_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal boxSize_val24_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal boxSize_val24_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal boxSize_val24_c_empty_n : STD_LOGIC;
    signal boxColorR_val25_c_full_n : STD_LOGIC;
    signal boxColorR_val25_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal boxColorR_val25_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal boxColorR_val25_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal boxColorR_val25_c_empty_n : STD_LOGIC;
    signal boxColorG_val26_c_full_n : STD_LOGIC;
    signal boxColorG_val26_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal boxColorG_val26_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal boxColorG_val26_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal boxColorG_val26_c_empty_n : STD_LOGIC;
    signal boxColorB_val27_c_full_n : STD_LOGIC;
    signal boxColorB_val27_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal boxColorB_val27_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal boxColorB_val27_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal boxColorB_val27_c_empty_n : STD_LOGIC;
    signal bckgndYUV_full_n : STD_LOGIC;
    signal bckgndYUV_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal bckgndYUV_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal bckgndYUV_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal bckgndYUV_empty_n : STD_LOGIC;
    signal height_val4_c12_full_n : STD_LOGIC;
    signal height_val4_c12_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_val4_c12_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_val4_c12_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_val4_c12_empty_n : STD_LOGIC;
    signal width_val7_c13_full_n : STD_LOGIC;
    signal width_val7_c13_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal width_val7_c13_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal width_val7_c13_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal width_val7_c13_empty_n : STD_LOGIC;
    signal motionSpeed_val14_c_full_n : STD_LOGIC;
    signal motionSpeed_val14_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal motionSpeed_val14_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal motionSpeed_val14_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal motionSpeed_val14_c_empty_n : STD_LOGIC;
    signal colorFormat_val17_c14_full_n : STD_LOGIC;
    signal colorFormat_val17_c14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal colorFormat_val17_c14_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal colorFormat_val17_c14_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal colorFormat_val17_c14_empty_n : STD_LOGIC;
    signal ovrlayYUV_full_n : STD_LOGIC;
    signal ovrlayYUV_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal ovrlayYUV_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal ovrlayYUV_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal ovrlayYUV_empty_n : STD_LOGIC;
    signal height_val4_c_full_n : STD_LOGIC;
    signal height_val4_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal height_val4_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_val4_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_val4_c_empty_n : STD_LOGIC;
    signal width_val7_c_full_n : STD_LOGIC;
    signal width_val7_c_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal width_val7_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal width_val7_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal width_val7_c_empty_n : STD_LOGIC;
    signal colorFormat_val17_c_full_n : STD_LOGIC;
    signal colorFormat_val17_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal colorFormat_val17_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal colorFormat_val17_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal colorFormat_val17_c_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_tpgBackground_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_tpgBackground_U0_ap_ready : STD_LOGIC;
    signal start_for_tpgForeground_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_tpgForeground_U0_full_n : STD_LOGIC;
    signal start_for_tpgForeground_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_tpgForeground_U0_empty_n : STD_LOGIC;
    signal start_for_MultiPixStream2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_MultiPixStream2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_MultiPixStream2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_MultiPixStream2AXIvideo_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hdmi_out_v_tpg_0_0_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        field_id_val8 : IN STD_LOGIC_VECTOR (15 downto 0);
        field_id_val8_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        field_id_val8_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        field_id_val8_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        field_id_val8_c_full_n : IN STD_LOGIC;
        field_id_val8_c_write : OUT STD_LOGIC;
        fid_in_val9 : IN STD_LOGIC_VECTOR (0 downto 0);
        fid_in_val9_c_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        fid_in_val9_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        fid_in_val9_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        fid_in_val9_c_full_n : IN STD_LOGIC;
        fid_in_val9_c_write : OUT STD_LOGIC;
        ovrlayId_val11 : IN STD_LOGIC_VECTOR (7 downto 0);
        ovrlayId_val11_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        ovrlayId_val11_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ovrlayId_val11_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ovrlayId_val11_c_full_n : IN STD_LOGIC;
        ovrlayId_val11_c_write : OUT STD_LOGIC;
        maskId_val12 : IN STD_LOGIC_VECTOR (7 downto 0);
        maskId_val12_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        maskId_val12_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        maskId_val12_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        maskId_val12_c_full_n : IN STD_LOGIC;
        maskId_val12_c_write : OUT STD_LOGIC;
        crossHairX_val18 : IN STD_LOGIC_VECTOR (15 downto 0);
        crossHairX_val18_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        crossHairX_val18_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairX_val18_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairX_val18_c_full_n : IN STD_LOGIC;
        crossHairX_val18_c_write : OUT STD_LOGIC;
        crossHairY_val19 : IN STD_LOGIC_VECTOR (15 downto 0);
        crossHairY_val19_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        crossHairY_val19_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairY_val19_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairY_val19_c_full_n : IN STD_LOGIC;
        crossHairY_val19_c_write : OUT STD_LOGIC;
        boxSize_val24 : IN STD_LOGIC_VECTOR (15 downto 0);
        boxSize_val24_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        boxSize_val24_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxSize_val24_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxSize_val24_c_full_n : IN STD_LOGIC;
        boxSize_val24_c_write : OUT STD_LOGIC;
        boxColorR_val25 : IN STD_LOGIC_VECTOR (7 downto 0);
        boxColorR_val25_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        boxColorR_val25_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorR_val25_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorR_val25_c_full_n : IN STD_LOGIC;
        boxColorR_val25_c_write : OUT STD_LOGIC;
        boxColorG_val26 : IN STD_LOGIC_VECTOR (7 downto 0);
        boxColorG_val26_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        boxColorG_val26_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorG_val26_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorG_val26_c_full_n : IN STD_LOGIC;
        boxColorG_val26_c_write : OUT STD_LOGIC;
        boxColorB_val27 : IN STD_LOGIC_VECTOR (7 downto 0);
        boxColorB_val27_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        boxColorB_val27_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorB_val27_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorB_val27_c_full_n : IN STD_LOGIC;
        boxColorB_val27_c_write : OUT STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_tpgBackground IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        height_val : IN STD_LOGIC_VECTOR (15 downto 0);
        width_val : IN STD_LOGIC_VECTOR (15 downto 0);
        patternId_val : IN STD_LOGIC_VECTOR (7 downto 0);
        ZplateHorContStart_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ZplateHorContDelta_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ZplateVerContStart_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ZplateVerContDelta_val : IN STD_LOGIC_VECTOR (15 downto 0);
        dpDynamicRange_val : IN STD_LOGIC_VECTOR (7 downto 0);
        dpYUVCoef_val : IN STD_LOGIC_VECTOR (7 downto 0);
        motionSpeed_val : IN STD_LOGIC_VECTOR (7 downto 0);
        colorFormat_val : IN STD_LOGIC_VECTOR (7 downto 0);
        bckgndYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        bckgndYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        bckgndYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        bckgndYUV_full_n : IN STD_LOGIC;
        bckgndYUV_write : OUT STD_LOGIC;
        height_val4_c12_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        height_val4_c12_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val4_c12_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val4_c12_full_n : IN STD_LOGIC;
        height_val4_c12_write : OUT STD_LOGIC;
        width_val7_c13_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        width_val7_c13_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val7_c13_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val7_c13_full_n : IN STD_LOGIC;
        width_val7_c13_write : OUT STD_LOGIC;
        motionSpeed_val14_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        motionSpeed_val14_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        motionSpeed_val14_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        motionSpeed_val14_c_full_n : IN STD_LOGIC;
        motionSpeed_val14_c_write : OUT STD_LOGIC;
        colorFormat_val17_c14_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        colorFormat_val17_c14_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val17_c14_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val17_c14_full_n : IN STD_LOGIC;
        colorFormat_val17_c14_write : OUT STD_LOGIC;
        s : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hdmi_out_v_tpg_0_0_tpgForeground IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bckgndYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        bckgndYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        bckgndYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        bckgndYUV_empty_n : IN STD_LOGIC;
        bckgndYUV_read : OUT STD_LOGIC;
        height_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        height_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val_empty_n : IN STD_LOGIC;
        height_val_read : OUT STD_LOGIC;
        width_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        width_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val_empty_n : IN STD_LOGIC;
        width_val_read : OUT STD_LOGIC;
        patternId_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        patternId_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        patternId_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        patternId_val_empty_n : IN STD_LOGIC;
        patternId_val_read : OUT STD_LOGIC;
        maskId_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        maskId_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        maskId_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        maskId_val_empty_n : IN STD_LOGIC;
        maskId_val_read : OUT STD_LOGIC;
        colorFormat_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        colorFormat_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val_empty_n : IN STD_LOGIC;
        colorFormat_val_read : OUT STD_LOGIC;
        crossHairX_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        crossHairX_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairX_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairX_val_empty_n : IN STD_LOGIC;
        crossHairX_val_read : OUT STD_LOGIC;
        crossHairY_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        crossHairY_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairY_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        crossHairY_val_empty_n : IN STD_LOGIC;
        crossHairY_val_read : OUT STD_LOGIC;
        boxSize_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        boxSize_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxSize_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxSize_val_empty_n : IN STD_LOGIC;
        boxSize_val_read : OUT STD_LOGIC;
        boxColorR_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        boxColorR_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorR_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorR_val_empty_n : IN STD_LOGIC;
        boxColorR_val_read : OUT STD_LOGIC;
        boxColorG_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        boxColorG_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorG_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorG_val_empty_n : IN STD_LOGIC;
        boxColorG_val_read : OUT STD_LOGIC;
        boxColorB_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        boxColorB_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorB_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        boxColorB_val_empty_n : IN STD_LOGIC;
        boxColorB_val_read : OUT STD_LOGIC;
        motionSpeed_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        motionSpeed_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        motionSpeed_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        motionSpeed_val_empty_n : IN STD_LOGIC;
        motionSpeed_val_read : OUT STD_LOGIC;
        ovrlayYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_full_n : IN STD_LOGIC;
        ovrlayYUV_write : OUT STD_LOGIC;
        height_val4_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        height_val4_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val4_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val4_c_full_n : IN STD_LOGIC;
        height_val4_c_write : OUT STD_LOGIC;
        width_val7_c_din : OUT STD_LOGIC_VECTOR (12 downto 0);
        width_val7_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val7_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val7_c_full_n : IN STD_LOGIC;
        width_val7_c_write : OUT STD_LOGIC;
        colorFormat_val17_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        colorFormat_val17_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val17_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val17_c_full_n : IN STD_LOGIC;
        colorFormat_val17_c_write : OUT STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_MultiPixStream2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ovrlayYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_empty_n : IN STD_LOGIC;
        ovrlayYUV_read : OUT STD_LOGIC;
        m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        m_axis_video_TVALID : OUT STD_LOGIC;
        m_axis_video_TREADY : IN STD_LOGIC;
        m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        height_val4_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        height_val4_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val4_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        height_val4_empty_n : IN STD_LOGIC;
        height_val4_read : OUT STD_LOGIC;
        width_val7_dout : IN STD_LOGIC_VECTOR (12 downto 0);
        width_val7_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val7_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        width_val7_empty_n : IN STD_LOGIC;
        width_val7_read : OUT STD_LOGIC;
        colorFormat_val17_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        colorFormat_val17_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val17_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        colorFormat_val17_empty_n : IN STD_LOGIC;
        colorFormat_val17_read : OUT STD_LOGIC;
        fid_in_val9_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        fid_in_val9_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        fid_in_val9_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        fid_in_val9_empty_n : IN STD_LOGIC;
        fid_in_val9_read : OUT STD_LOGIC;
        fid : OUT STD_LOGIC_VECTOR (0 downto 0);
        fid_ap_vld : OUT STD_LOGIC;
        field_id_val8_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        field_id_val8_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        field_id_val8_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        field_id_val8_empty_n : IN STD_LOGIC;
        field_id_val8_read : OUT STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w16_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w1_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w8_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w16_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w24_d16_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w12_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_fifo_w13_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_start_for_tpgForeground_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component hdmi_out_v_tpg_0_0_start_for_MultiPixStream2AXIvideo_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc_U0 : component hdmi_out_v_tpg_0_0_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc_U0_ap_start,
        start_full_n => entry_proc_U0_start_full_n,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        start_out => entry_proc_U0_start_out,
        start_write => entry_proc_U0_start_write,
        field_id_val8 => field_id_val8,
        field_id_val8_c_din => entry_proc_U0_field_id_val8_c_din,
        field_id_val8_c_num_data_valid => field_id_val8_c_num_data_valid,
        field_id_val8_c_fifo_cap => field_id_val8_c_fifo_cap,
        field_id_val8_c_full_n => field_id_val8_c_full_n,
        field_id_val8_c_write => entry_proc_U0_field_id_val8_c_write,
        fid_in_val9 => fid_in_val9,
        fid_in_val9_c_din => entry_proc_U0_fid_in_val9_c_din,
        fid_in_val9_c_num_data_valid => fid_in_val9_c_num_data_valid,
        fid_in_val9_c_fifo_cap => fid_in_val9_c_fifo_cap,
        fid_in_val9_c_full_n => fid_in_val9_c_full_n,
        fid_in_val9_c_write => entry_proc_U0_fid_in_val9_c_write,
        ovrlayId_val11 => ovrlayId_val11,
        ovrlayId_val11_c_din => entry_proc_U0_ovrlayId_val11_c_din,
        ovrlayId_val11_c_num_data_valid => ovrlayId_val11_c_num_data_valid,
        ovrlayId_val11_c_fifo_cap => ovrlayId_val11_c_fifo_cap,
        ovrlayId_val11_c_full_n => ovrlayId_val11_c_full_n,
        ovrlayId_val11_c_write => entry_proc_U0_ovrlayId_val11_c_write,
        maskId_val12 => maskId_val12,
        maskId_val12_c_din => entry_proc_U0_maskId_val12_c_din,
        maskId_val12_c_num_data_valid => maskId_val12_c_num_data_valid,
        maskId_val12_c_fifo_cap => maskId_val12_c_fifo_cap,
        maskId_val12_c_full_n => maskId_val12_c_full_n,
        maskId_val12_c_write => entry_proc_U0_maskId_val12_c_write,
        crossHairX_val18 => crossHairX_val18,
        crossHairX_val18_c_din => entry_proc_U0_crossHairX_val18_c_din,
        crossHairX_val18_c_num_data_valid => crossHairX_val18_c_num_data_valid,
        crossHairX_val18_c_fifo_cap => crossHairX_val18_c_fifo_cap,
        crossHairX_val18_c_full_n => crossHairX_val18_c_full_n,
        crossHairX_val18_c_write => entry_proc_U0_crossHairX_val18_c_write,
        crossHairY_val19 => crossHairY_val19,
        crossHairY_val19_c_din => entry_proc_U0_crossHairY_val19_c_din,
        crossHairY_val19_c_num_data_valid => crossHairY_val19_c_num_data_valid,
        crossHairY_val19_c_fifo_cap => crossHairY_val19_c_fifo_cap,
        crossHairY_val19_c_full_n => crossHairY_val19_c_full_n,
        crossHairY_val19_c_write => entry_proc_U0_crossHairY_val19_c_write,
        boxSize_val24 => boxSize_val24,
        boxSize_val24_c_din => entry_proc_U0_boxSize_val24_c_din,
        boxSize_val24_c_num_data_valid => boxSize_val24_c_num_data_valid,
        boxSize_val24_c_fifo_cap => boxSize_val24_c_fifo_cap,
        boxSize_val24_c_full_n => boxSize_val24_c_full_n,
        boxSize_val24_c_write => entry_proc_U0_boxSize_val24_c_write,
        boxColorR_val25 => boxColorR_val25,
        boxColorR_val25_c_din => entry_proc_U0_boxColorR_val25_c_din,
        boxColorR_val25_c_num_data_valid => boxColorR_val25_c_num_data_valid,
        boxColorR_val25_c_fifo_cap => boxColorR_val25_c_fifo_cap,
        boxColorR_val25_c_full_n => boxColorR_val25_c_full_n,
        boxColorR_val25_c_write => entry_proc_U0_boxColorR_val25_c_write,
        boxColorG_val26 => boxColorG_val26,
        boxColorG_val26_c_din => entry_proc_U0_boxColorG_val26_c_din,
        boxColorG_val26_c_num_data_valid => boxColorG_val26_c_num_data_valid,
        boxColorG_val26_c_fifo_cap => boxColorG_val26_c_fifo_cap,
        boxColorG_val26_c_full_n => boxColorG_val26_c_full_n,
        boxColorG_val26_c_write => entry_proc_U0_boxColorG_val26_c_write,
        boxColorB_val27 => boxColorB_val27,
        boxColorB_val27_c_din => entry_proc_U0_boxColorB_val27_c_din,
        boxColorB_val27_c_num_data_valid => boxColorB_val27_c_num_data_valid,
        boxColorB_val27_c_fifo_cap => boxColorB_val27_c_fifo_cap,
        boxColorB_val27_c_full_n => boxColorB_val27_c_full_n,
        boxColorB_val27_c_write => entry_proc_U0_boxColorB_val27_c_write);

    tpgBackground_U0 : component hdmi_out_v_tpg_0_0_tpgBackground
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => tpgBackground_U0_ap_start,
        ap_done => tpgBackground_U0_ap_done,
        ap_continue => tpgBackground_U0_ap_continue,
        ap_idle => tpgBackground_U0_ap_idle,
        ap_ready => tpgBackground_U0_ap_ready,
        height_val => height_val4,
        width_val => width_val7,
        patternId_val => bckgndId_val10,
        ZplateHorContStart_val => ZplateHorContStart_val20,
        ZplateHorContDelta_val => ZplateHorContDelta_val21,
        ZplateVerContStart_val => ZplateVerContStart_val22,
        ZplateVerContDelta_val => ZplateVerContDelta_val23,
        dpDynamicRange_val => dpDynamicRange_val28,
        dpYUVCoef_val => dpYUVCoef_val29,
        motionSpeed_val => motionSpeed_val14,
        colorFormat_val => colorFormat_val17,
        bckgndYUV_din => tpgBackground_U0_bckgndYUV_din,
        bckgndYUV_num_data_valid => bckgndYUV_num_data_valid,
        bckgndYUV_fifo_cap => bckgndYUV_fifo_cap,
        bckgndYUV_full_n => bckgndYUV_full_n,
        bckgndYUV_write => tpgBackground_U0_bckgndYUV_write,
        height_val4_c12_din => tpgBackground_U0_height_val4_c12_din,
        height_val4_c12_num_data_valid => height_val4_c12_num_data_valid,
        height_val4_c12_fifo_cap => height_val4_c12_fifo_cap,
        height_val4_c12_full_n => height_val4_c12_full_n,
        height_val4_c12_write => tpgBackground_U0_height_val4_c12_write,
        width_val7_c13_din => tpgBackground_U0_width_val7_c13_din,
        width_val7_c13_num_data_valid => width_val7_c13_num_data_valid,
        width_val7_c13_fifo_cap => width_val7_c13_fifo_cap,
        width_val7_c13_full_n => width_val7_c13_full_n,
        width_val7_c13_write => tpgBackground_U0_width_val7_c13_write,
        motionSpeed_val14_c_din => tpgBackground_U0_motionSpeed_val14_c_din,
        motionSpeed_val14_c_num_data_valid => motionSpeed_val14_c_num_data_valid,
        motionSpeed_val14_c_fifo_cap => motionSpeed_val14_c_fifo_cap,
        motionSpeed_val14_c_full_n => motionSpeed_val14_c_full_n,
        motionSpeed_val14_c_write => tpgBackground_U0_motionSpeed_val14_c_write,
        colorFormat_val17_c14_din => tpgBackground_U0_colorFormat_val17_c14_din,
        colorFormat_val17_c14_num_data_valid => colorFormat_val17_c14_num_data_valid,
        colorFormat_val17_c14_fifo_cap => colorFormat_val17_c14_fifo_cap,
        colorFormat_val17_c14_full_n => colorFormat_val17_c14_full_n,
        colorFormat_val17_c14_write => tpgBackground_U0_colorFormat_val17_c14_write,
        s => s);

    tpgForeground_U0 : component hdmi_out_v_tpg_0_0_tpgForeground
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => tpgForeground_U0_ap_start,
        ap_done => tpgForeground_U0_ap_done,
        ap_continue => tpgForeground_U0_ap_continue,
        ap_idle => tpgForeground_U0_ap_idle,
        ap_ready => tpgForeground_U0_ap_ready,
        bckgndYUV_dout => bckgndYUV_dout,
        bckgndYUV_num_data_valid => bckgndYUV_num_data_valid,
        bckgndYUV_fifo_cap => bckgndYUV_fifo_cap,
        bckgndYUV_empty_n => bckgndYUV_empty_n,
        bckgndYUV_read => tpgForeground_U0_bckgndYUV_read,
        height_val_dout => height_val4_c12_dout,
        height_val_num_data_valid => height_val4_c12_num_data_valid,
        height_val_fifo_cap => height_val4_c12_fifo_cap,
        height_val_empty_n => height_val4_c12_empty_n,
        height_val_read => tpgForeground_U0_height_val_read,
        width_val_dout => width_val7_c13_dout,
        width_val_num_data_valid => width_val7_c13_num_data_valid,
        width_val_fifo_cap => width_val7_c13_fifo_cap,
        width_val_empty_n => width_val7_c13_empty_n,
        width_val_read => tpgForeground_U0_width_val_read,
        patternId_val_dout => ovrlayId_val11_c_dout,
        patternId_val_num_data_valid => ovrlayId_val11_c_num_data_valid,
        patternId_val_fifo_cap => ovrlayId_val11_c_fifo_cap,
        patternId_val_empty_n => ovrlayId_val11_c_empty_n,
        patternId_val_read => tpgForeground_U0_patternId_val_read,
        maskId_val_dout => maskId_val12_c_dout,
        maskId_val_num_data_valid => maskId_val12_c_num_data_valid,
        maskId_val_fifo_cap => maskId_val12_c_fifo_cap,
        maskId_val_empty_n => maskId_val12_c_empty_n,
        maskId_val_read => tpgForeground_U0_maskId_val_read,
        colorFormat_val_dout => colorFormat_val17_c14_dout,
        colorFormat_val_num_data_valid => colorFormat_val17_c14_num_data_valid,
        colorFormat_val_fifo_cap => colorFormat_val17_c14_fifo_cap,
        colorFormat_val_empty_n => colorFormat_val17_c14_empty_n,
        colorFormat_val_read => tpgForeground_U0_colorFormat_val_read,
        crossHairX_val_dout => crossHairX_val18_c_dout,
        crossHairX_val_num_data_valid => crossHairX_val18_c_num_data_valid,
        crossHairX_val_fifo_cap => crossHairX_val18_c_fifo_cap,
        crossHairX_val_empty_n => crossHairX_val18_c_empty_n,
        crossHairX_val_read => tpgForeground_U0_crossHairX_val_read,
        crossHairY_val_dout => crossHairY_val19_c_dout,
        crossHairY_val_num_data_valid => crossHairY_val19_c_num_data_valid,
        crossHairY_val_fifo_cap => crossHairY_val19_c_fifo_cap,
        crossHairY_val_empty_n => crossHairY_val19_c_empty_n,
        crossHairY_val_read => tpgForeground_U0_crossHairY_val_read,
        boxSize_val_dout => boxSize_val24_c_dout,
        boxSize_val_num_data_valid => boxSize_val24_c_num_data_valid,
        boxSize_val_fifo_cap => boxSize_val24_c_fifo_cap,
        boxSize_val_empty_n => boxSize_val24_c_empty_n,
        boxSize_val_read => tpgForeground_U0_boxSize_val_read,
        boxColorR_val_dout => boxColorR_val25_c_dout,
        boxColorR_val_num_data_valid => boxColorR_val25_c_num_data_valid,
        boxColorR_val_fifo_cap => boxColorR_val25_c_fifo_cap,
        boxColorR_val_empty_n => boxColorR_val25_c_empty_n,
        boxColorR_val_read => tpgForeground_U0_boxColorR_val_read,
        boxColorG_val_dout => boxColorG_val26_c_dout,
        boxColorG_val_num_data_valid => boxColorG_val26_c_num_data_valid,
        boxColorG_val_fifo_cap => boxColorG_val26_c_fifo_cap,
        boxColorG_val_empty_n => boxColorG_val26_c_empty_n,
        boxColorG_val_read => tpgForeground_U0_boxColorG_val_read,
        boxColorB_val_dout => boxColorB_val27_c_dout,
        boxColorB_val_num_data_valid => boxColorB_val27_c_num_data_valid,
        boxColorB_val_fifo_cap => boxColorB_val27_c_fifo_cap,
        boxColorB_val_empty_n => boxColorB_val27_c_empty_n,
        boxColorB_val_read => tpgForeground_U0_boxColorB_val_read,
        motionSpeed_val_dout => motionSpeed_val14_c_dout,
        motionSpeed_val_num_data_valid => motionSpeed_val14_c_num_data_valid,
        motionSpeed_val_fifo_cap => motionSpeed_val14_c_fifo_cap,
        motionSpeed_val_empty_n => motionSpeed_val14_c_empty_n,
        motionSpeed_val_read => tpgForeground_U0_motionSpeed_val_read,
        ovrlayYUV_din => tpgForeground_U0_ovrlayYUV_din,
        ovrlayYUV_num_data_valid => ovrlayYUV_num_data_valid,
        ovrlayYUV_fifo_cap => ovrlayYUV_fifo_cap,
        ovrlayYUV_full_n => ovrlayYUV_full_n,
        ovrlayYUV_write => tpgForeground_U0_ovrlayYUV_write,
        height_val4_c_din => tpgForeground_U0_height_val4_c_din,
        height_val4_c_num_data_valid => height_val4_c_num_data_valid,
        height_val4_c_fifo_cap => height_val4_c_fifo_cap,
        height_val4_c_full_n => height_val4_c_full_n,
        height_val4_c_write => tpgForeground_U0_height_val4_c_write,
        width_val7_c_din => tpgForeground_U0_width_val7_c_din,
        width_val7_c_num_data_valid => width_val7_c_num_data_valid,
        width_val7_c_fifo_cap => width_val7_c_fifo_cap,
        width_val7_c_full_n => width_val7_c_full_n,
        width_val7_c_write => tpgForeground_U0_width_val7_c_write,
        colorFormat_val17_c_din => tpgForeground_U0_colorFormat_val17_c_din,
        colorFormat_val17_c_num_data_valid => colorFormat_val17_c_num_data_valid,
        colorFormat_val17_c_fifo_cap => colorFormat_val17_c_fifo_cap,
        colorFormat_val17_c_full_n => colorFormat_val17_c_full_n,
        colorFormat_val17_c_write => tpgForeground_U0_colorFormat_val17_c_write);

    MultiPixStream2AXIvideo_U0 : component hdmi_out_v_tpg_0_0_MultiPixStream2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => MultiPixStream2AXIvideo_U0_ap_start,
        ap_done => MultiPixStream2AXIvideo_U0_ap_done,
        ap_continue => MultiPixStream2AXIvideo_U0_ap_continue,
        ap_idle => MultiPixStream2AXIvideo_U0_ap_idle,
        ap_ready => MultiPixStream2AXIvideo_U0_ap_ready,
        ovrlayYUV_dout => ovrlayYUV_dout,
        ovrlayYUV_num_data_valid => ovrlayYUV_num_data_valid,
        ovrlayYUV_fifo_cap => ovrlayYUV_fifo_cap,
        ovrlayYUV_empty_n => ovrlayYUV_empty_n,
        ovrlayYUV_read => MultiPixStream2AXIvideo_U0_ovrlayYUV_read,
        m_axis_video_TDATA => MultiPixStream2AXIvideo_U0_m_axis_video_TDATA,
        m_axis_video_TVALID => MultiPixStream2AXIvideo_U0_m_axis_video_TVALID,
        m_axis_video_TREADY => m_axis_video_TREADY,
        m_axis_video_TKEEP => MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP,
        m_axis_video_TSTRB => MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB,
        m_axis_video_TUSER => MultiPixStream2AXIvideo_U0_m_axis_video_TUSER,
        m_axis_video_TLAST => MultiPixStream2AXIvideo_U0_m_axis_video_TLAST,
        m_axis_video_TID => MultiPixStream2AXIvideo_U0_m_axis_video_TID,
        m_axis_video_TDEST => MultiPixStream2AXIvideo_U0_m_axis_video_TDEST,
        height_val4_dout => height_val4_c_dout,
        height_val4_num_data_valid => height_val4_c_num_data_valid,
        height_val4_fifo_cap => height_val4_c_fifo_cap,
        height_val4_empty_n => height_val4_c_empty_n,
        height_val4_read => MultiPixStream2AXIvideo_U0_height_val4_read,
        width_val7_dout => width_val7_c_dout,
        width_val7_num_data_valid => width_val7_c_num_data_valid,
        width_val7_fifo_cap => width_val7_c_fifo_cap,
        width_val7_empty_n => width_val7_c_empty_n,
        width_val7_read => MultiPixStream2AXIvideo_U0_width_val7_read,
        colorFormat_val17_dout => colorFormat_val17_c_dout,
        colorFormat_val17_num_data_valid => colorFormat_val17_c_num_data_valid,
        colorFormat_val17_fifo_cap => colorFormat_val17_c_fifo_cap,
        colorFormat_val17_empty_n => colorFormat_val17_c_empty_n,
        colorFormat_val17_read => MultiPixStream2AXIvideo_U0_colorFormat_val17_read,
        fid_in_val9_dout => fid_in_val9_c_dout,
        fid_in_val9_num_data_valid => fid_in_val9_c_num_data_valid,
        fid_in_val9_fifo_cap => fid_in_val9_c_fifo_cap,
        fid_in_val9_empty_n => fid_in_val9_c_empty_n,
        fid_in_val9_read => MultiPixStream2AXIvideo_U0_fid_in_val9_read,
        fid => MultiPixStream2AXIvideo_U0_fid,
        fid_ap_vld => MultiPixStream2AXIvideo_U0_fid_ap_vld,
        field_id_val8_dout => field_id_val8_c_dout,
        field_id_val8_num_data_valid => field_id_val8_c_num_data_valid,
        field_id_val8_fifo_cap => field_id_val8_c_fifo_cap,
        field_id_val8_empty_n => field_id_val8_c_empty_n,
        field_id_val8_read => MultiPixStream2AXIvideo_U0_field_id_val8_read);

    field_id_val8_c_U : component hdmi_out_v_tpg_0_0_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_field_id_val8_c_din,
        if_full_n => field_id_val8_c_full_n,
        if_write => entry_proc_U0_field_id_val8_c_write,
        if_dout => field_id_val8_c_dout,
        if_num_data_valid => field_id_val8_c_num_data_valid,
        if_fifo_cap => field_id_val8_c_fifo_cap,
        if_empty_n => field_id_val8_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_field_id_val8_read);

    fid_in_val9_c_U : component hdmi_out_v_tpg_0_0_fifo_w1_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_fid_in_val9_c_din,
        if_full_n => fid_in_val9_c_full_n,
        if_write => entry_proc_U0_fid_in_val9_c_write,
        if_dout => fid_in_val9_c_dout,
        if_num_data_valid => fid_in_val9_c_num_data_valid,
        if_fifo_cap => fid_in_val9_c_fifo_cap,
        if_empty_n => fid_in_val9_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_fid_in_val9_read);

    ovrlayId_val11_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_ovrlayId_val11_c_din,
        if_full_n => ovrlayId_val11_c_full_n,
        if_write => entry_proc_U0_ovrlayId_val11_c_write,
        if_dout => ovrlayId_val11_c_dout,
        if_num_data_valid => ovrlayId_val11_c_num_data_valid,
        if_fifo_cap => ovrlayId_val11_c_fifo_cap,
        if_empty_n => ovrlayId_val11_c_empty_n,
        if_read => tpgForeground_U0_patternId_val_read);

    maskId_val12_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_maskId_val12_c_din,
        if_full_n => maskId_val12_c_full_n,
        if_write => entry_proc_U0_maskId_val12_c_write,
        if_dout => maskId_val12_c_dout,
        if_num_data_valid => maskId_val12_c_num_data_valid,
        if_fifo_cap => maskId_val12_c_fifo_cap,
        if_empty_n => maskId_val12_c_empty_n,
        if_read => tpgForeground_U0_maskId_val_read);

    crossHairX_val18_c_U : component hdmi_out_v_tpg_0_0_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_crossHairX_val18_c_din,
        if_full_n => crossHairX_val18_c_full_n,
        if_write => entry_proc_U0_crossHairX_val18_c_write,
        if_dout => crossHairX_val18_c_dout,
        if_num_data_valid => crossHairX_val18_c_num_data_valid,
        if_fifo_cap => crossHairX_val18_c_fifo_cap,
        if_empty_n => crossHairX_val18_c_empty_n,
        if_read => tpgForeground_U0_crossHairX_val_read);

    crossHairY_val19_c_U : component hdmi_out_v_tpg_0_0_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_crossHairY_val19_c_din,
        if_full_n => crossHairY_val19_c_full_n,
        if_write => entry_proc_U0_crossHairY_val19_c_write,
        if_dout => crossHairY_val19_c_dout,
        if_num_data_valid => crossHairY_val19_c_num_data_valid,
        if_fifo_cap => crossHairY_val19_c_fifo_cap,
        if_empty_n => crossHairY_val19_c_empty_n,
        if_read => tpgForeground_U0_crossHairY_val_read);

    boxSize_val24_c_U : component hdmi_out_v_tpg_0_0_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_boxSize_val24_c_din,
        if_full_n => boxSize_val24_c_full_n,
        if_write => entry_proc_U0_boxSize_val24_c_write,
        if_dout => boxSize_val24_c_dout,
        if_num_data_valid => boxSize_val24_c_num_data_valid,
        if_fifo_cap => boxSize_val24_c_fifo_cap,
        if_empty_n => boxSize_val24_c_empty_n,
        if_read => tpgForeground_U0_boxSize_val_read);

    boxColorR_val25_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_boxColorR_val25_c_din,
        if_full_n => boxColorR_val25_c_full_n,
        if_write => entry_proc_U0_boxColorR_val25_c_write,
        if_dout => boxColorR_val25_c_dout,
        if_num_data_valid => boxColorR_val25_c_num_data_valid,
        if_fifo_cap => boxColorR_val25_c_fifo_cap,
        if_empty_n => boxColorR_val25_c_empty_n,
        if_read => tpgForeground_U0_boxColorR_val_read);

    boxColorG_val26_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_boxColorG_val26_c_din,
        if_full_n => boxColorG_val26_c_full_n,
        if_write => entry_proc_U0_boxColorG_val26_c_write,
        if_dout => boxColorG_val26_c_dout,
        if_num_data_valid => boxColorG_val26_c_num_data_valid,
        if_fifo_cap => boxColorG_val26_c_fifo_cap,
        if_empty_n => boxColorG_val26_c_empty_n,
        if_read => tpgForeground_U0_boxColorG_val_read);

    boxColorB_val27_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_boxColorB_val27_c_din,
        if_full_n => boxColorB_val27_c_full_n,
        if_write => entry_proc_U0_boxColorB_val27_c_write,
        if_dout => boxColorB_val27_c_dout,
        if_num_data_valid => boxColorB_val27_c_num_data_valid,
        if_fifo_cap => boxColorB_val27_c_fifo_cap,
        if_empty_n => boxColorB_val27_c_empty_n,
        if_read => tpgForeground_U0_boxColorB_val_read);

    bckgndYUV_U : component hdmi_out_v_tpg_0_0_fifo_w24_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgBackground_U0_bckgndYUV_din,
        if_full_n => bckgndYUV_full_n,
        if_write => tpgBackground_U0_bckgndYUV_write,
        if_dout => bckgndYUV_dout,
        if_num_data_valid => bckgndYUV_num_data_valid,
        if_fifo_cap => bckgndYUV_fifo_cap,
        if_empty_n => bckgndYUV_empty_n,
        if_read => tpgForeground_U0_bckgndYUV_read);

    height_val4_c12_U : component hdmi_out_v_tpg_0_0_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgBackground_U0_height_val4_c12_din,
        if_full_n => height_val4_c12_full_n,
        if_write => tpgBackground_U0_height_val4_c12_write,
        if_dout => height_val4_c12_dout,
        if_num_data_valid => height_val4_c12_num_data_valid,
        if_fifo_cap => height_val4_c12_fifo_cap,
        if_empty_n => height_val4_c12_empty_n,
        if_read => tpgForeground_U0_height_val_read);

    width_val7_c13_U : component hdmi_out_v_tpg_0_0_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgBackground_U0_width_val7_c13_din,
        if_full_n => width_val7_c13_full_n,
        if_write => tpgBackground_U0_width_val7_c13_write,
        if_dout => width_val7_c13_dout,
        if_num_data_valid => width_val7_c13_num_data_valid,
        if_fifo_cap => width_val7_c13_fifo_cap,
        if_empty_n => width_val7_c13_empty_n,
        if_read => tpgForeground_U0_width_val_read);

    motionSpeed_val14_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgBackground_U0_motionSpeed_val14_c_din,
        if_full_n => motionSpeed_val14_c_full_n,
        if_write => tpgBackground_U0_motionSpeed_val14_c_write,
        if_dout => motionSpeed_val14_c_dout,
        if_num_data_valid => motionSpeed_val14_c_num_data_valid,
        if_fifo_cap => motionSpeed_val14_c_fifo_cap,
        if_empty_n => motionSpeed_val14_c_empty_n,
        if_read => tpgForeground_U0_motionSpeed_val_read);

    colorFormat_val17_c14_U : component hdmi_out_v_tpg_0_0_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgBackground_U0_colorFormat_val17_c14_din,
        if_full_n => colorFormat_val17_c14_full_n,
        if_write => tpgBackground_U0_colorFormat_val17_c14_write,
        if_dout => colorFormat_val17_c14_dout,
        if_num_data_valid => colorFormat_val17_c14_num_data_valid,
        if_fifo_cap => colorFormat_val17_c14_fifo_cap,
        if_empty_n => colorFormat_val17_c14_empty_n,
        if_read => tpgForeground_U0_colorFormat_val_read);

    ovrlayYUV_U : component hdmi_out_v_tpg_0_0_fifo_w24_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgForeground_U0_ovrlayYUV_din,
        if_full_n => ovrlayYUV_full_n,
        if_write => tpgForeground_U0_ovrlayYUV_write,
        if_dout => ovrlayYUV_dout,
        if_num_data_valid => ovrlayYUV_num_data_valid,
        if_fifo_cap => ovrlayYUV_fifo_cap,
        if_empty_n => ovrlayYUV_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_ovrlayYUV_read);

    height_val4_c_U : component hdmi_out_v_tpg_0_0_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgForeground_U0_height_val4_c_din,
        if_full_n => height_val4_c_full_n,
        if_write => tpgForeground_U0_height_val4_c_write,
        if_dout => height_val4_c_dout,
        if_num_data_valid => height_val4_c_num_data_valid,
        if_fifo_cap => height_val4_c_fifo_cap,
        if_empty_n => height_val4_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_height_val4_read);

    width_val7_c_U : component hdmi_out_v_tpg_0_0_fifo_w13_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgForeground_U0_width_val7_c_din,
        if_full_n => width_val7_c_full_n,
        if_write => tpgForeground_U0_width_val7_c_write,
        if_dout => width_val7_c_dout,
        if_num_data_valid => width_val7_c_num_data_valid,
        if_fifo_cap => width_val7_c_fifo_cap,
        if_empty_n => width_val7_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_width_val7_read);

    colorFormat_val17_c_U : component hdmi_out_v_tpg_0_0_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tpgForeground_U0_colorFormat_val17_c_din,
        if_full_n => colorFormat_val17_c_full_n,
        if_write => tpgForeground_U0_colorFormat_val17_c_write,
        if_dout => colorFormat_val17_c_dout,
        if_num_data_valid => colorFormat_val17_c_num_data_valid,
        if_fifo_cap => colorFormat_val17_c_fifo_cap,
        if_empty_n => colorFormat_val17_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_colorFormat_val17_read);

    start_for_tpgForeground_U0_U : component hdmi_out_v_tpg_0_0_start_for_tpgForeground_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_tpgForeground_U0_din,
        if_full_n => start_for_tpgForeground_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_tpgForeground_U0_dout,
        if_empty_n => start_for_tpgForeground_U0_empty_n,
        if_read => tpgForeground_U0_ap_ready);

    start_for_MultiPixStream2AXIvideo_U0_U : component hdmi_out_v_tpg_0_0_start_for_MultiPixStream2AXIvideo_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_MultiPixStream2AXIvideo_U0_din,
        if_full_n => start_for_MultiPixStream2AXIvideo_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_MultiPixStream2AXIvideo_U0_dout,
        if_empty_n => start_for_MultiPixStream2AXIvideo_U0_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_ap_ready);





    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_tpgBackground_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_tpgBackground_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_tpgBackground_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_tpgBackground_U0_ap_ready <= ap_sync_tpgBackground_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    MultiPixStream2AXIvideo_U0_ap_continue <= ap_continue;
    MultiPixStream2AXIvideo_U0_ap_start <= start_for_MultiPixStream2AXIvideo_U0_empty_n;
    ap_done <= MultiPixStream2AXIvideo_U0_ap_done;
    ap_idle <= (tpgForeground_U0_ap_idle and tpgBackground_U0_ap_idle and entry_proc_U0_ap_idle and MultiPixStream2AXIvideo_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_ready <= (ap_sync_tpgBackground_U0_ap_ready and ap_sync_entry_proc_U0_ap_ready);
    ap_sync_tpgBackground_U0_ap_ready <= (tpgBackground_U0_ap_ready or ap_sync_reg_tpgBackground_U0_ap_ready);
    entry_proc_U0_ap_continue <= ap_const_logic_1;
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    entry_proc_U0_start_full_n <= (start_for_tpgForeground_U0_full_n and start_for_MultiPixStream2AXIvideo_U0_full_n);
    fid <= MultiPixStream2AXIvideo_U0_fid;
    fid_ap_vld <= MultiPixStream2AXIvideo_U0_fid_ap_vld;
    m_axis_video_TDATA <= MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;
    m_axis_video_TDEST <= MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;
    m_axis_video_TID <= MultiPixStream2AXIvideo_U0_m_axis_video_TID;
    m_axis_video_TKEEP <= MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;
    m_axis_video_TLAST <= MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;
    m_axis_video_TSTRB <= MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;
    m_axis_video_TUSER <= MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;
    m_axis_video_TVALID <= MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;
    start_for_MultiPixStream2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_tpgForeground_U0_din <= (0=>ap_const_logic_1, others=>'-');
    tpgBackground_U0_ap_continue <= ap_const_logic_1;
    tpgBackground_U0_ap_start <= ((ap_sync_reg_tpgBackground_U0_ap_ready xor ap_const_logic_1) and ap_start);
    tpgForeground_U0_ap_continue <= ap_const_logic_1;
    tpgForeground_U0_ap_start <= start_for_tpgForeground_U0_empty_n;
end behav;
